---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { languages } from '../i18n/ui';

// Get the current language from the URL params
const { lang = 'en' } = Astro.params;
const t = useTranslations(lang as keyof typeof languages);
const isRTL = lang === 'ar';

// Define props interface
interface Props {
  title?: string;
}

// Get the title from props or use the default
const { title = t('site.title') } = Astro.props;

// Create an array of navigation items
const navItems: { key: 'nav.home' | 'nav.projects' | 'nav.about' | 'nav.contact'; path: string }[] = [
  { key: 'nav.home', path: `/${lang}` },
  { key: 'nav.projects', path: `/${lang}/projects` },
  { key: 'nav.about', path: `/${lang}/about` },
  { key: 'nav.contact', path: `/${lang}/contact` },
];

// Create language switcher links
const currentPath = Astro.url.pathname;
const langSwitcher = Object.keys(languages).map(code => {
  const path = currentPath.replace(`/${lang}/`, `/${code}/`).replace(`/${lang}`, `/${code}`);
  return {
    code,
    label: languages[code as keyof typeof languages],
    path,
    active: code === lang
  };
});
---

<html lang={lang} dir={isRTL ? 'rtl' : 'ltr'}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={t('site.description')}>
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body class={isRTL ? 'rtl' : ''}>
    <header class="bg-gray-800 text-white py-4">
      <div class="container mx-auto px-4 flex justify-between items-center">
        <div class="logo">
          <a href={`/${lang}`} class="text-2xl font-bold">
            {t('site.title')}
          </a>
        </div>
        
        <nav>
          <ul class="flex space-x-6">
            {navItems.map(item => (
              <li>
                <a href={item.path}>
                  {t(item.key)}
                </a>
              </li>
            ))}
            <li>
              <div class="language-switcher">
                {langSwitcher.map(item => (
                  <a 
                    href={item.path}
                    class={item.active ? 'active' : ''}
                  >
                    {item.label}
                  </a>
                ))}
              </div>
            </li>
          </ul>
        </nav>
      </div>
    </header>
    
    <main>
      <slot />
    </main>
    
    <footer class="bg-gray-800 text-white py-8 mt-12">
      <div class="container mx-auto px-4">
        <p class="text-center">
          &copy; {new Date().getFullYear()} {t('site.title')}
        </p>
      </div>
    </footer>
  </body>
</html>

<style is:global>
  /* Basic global styles */
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    line-height: 1.6;
  }
  
  /* RTL support */
  .rtl {
    direction: rtl;
    text-align: right;
  }
  
  .rtl ul {
    flex-direction: row-reverse;
  }
  
  /* Container */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  /* Language Switcher */
  .language-switcher {
    display: flex;
    gap: 0.5rem;
  }
  
  .language-switcher a {
    color: #ccc;
    text-decoration: none;
  }
  
  .language-switcher a.active {
    color: #ffc107;
    font-weight: bold;
  }
</style>