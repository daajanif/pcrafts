---
// src/components/Hero.astro

interface Button {
  text: string
  url: string
  style: string
}

interface Stat {
  value: string
  label: string
}

const {
  title,
  subtitle,
  text,
  buttons,
  image,
  stats = [],
  lang = 'en'
} = Astro.props as {
  title: string
  subtitle: string
  text: string
  buttons: Button[]
  image: string
  stats?: Stat[]
  lang?: string
}

const isRTL = lang === 'ar'
---

<section class="relative bg-white overflow-hidden">
  <!-- Background image that covers the entire section -->
  <div class="absolute inset-0 w-full h-full z-0">
    <img
      src={image}
      alt=""
      class="w-full h-full object-cover"
      loading="lazy"
    />
    <!-- Dark overlay for better text contrast -->
    <div class="absolute inset-0 bg-gradient-to-r from-black/20 to-black/25"></div>
  </div>

  <div class="container relative z-10 mx-auto py-20 px-4">
    <div class={`max-w-3xl ${isRTL ? 'mr-0 ml-auto text-right' : 'ml-0 mr-auto text-left'}`}>
      <!-- Glass-like content container for visual appeal -->
      <div class="backdrop-blur-sm bg-white/10 p-8 rounded-lg shadow-lg border border-white/20">
        <h1
          class={`text-4xl lg:text-6xl font-bold text-white ${isRTL ? 'font-arabic' : ''}`}
          dir={isRTL ? 'rtl' : 'ltr'}
        >
          {title}
        </h1>

        <p
          class={`mt-4 text-3xl text-primary-600 ${isRTL ? 'font-arabic' : ''}`}
          dir={isRTL ? 'rtl' : 'ltr'}
        >
          {subtitle}
        </p>

        <p
          class={`mt-6 text-2xl text-black-400 ${isRTL ? 'font-arabic' : ''}`}
          dir={isRTL ? 'rtl' : 'ltr'}
        >
          {text}
        </p>

        <div class={`mt-8 flex flex-wrap gap-4 ${isRTL ? 'justify-end' : 'justify-start'}`}>
          {buttons.map((b) => (
            <a
              href={b.url}
              class={`${b.style} px-6 py-3 rounded-md font-medium transition shadow-lg hover:shadow-xl ${isRTL ? 'font-arabic' : ''}`}
              dir={isRTL ? 'rtl' : 'ltr'}
            >
              {b.text}
            </a>
          ))}
        </div>
      </div>
    </div>
  </div>
  
  <!-- Full-width Stats Section at bottom of hero (if stats are provided) -->
  {stats.length > 0 && (
    <div class="absolute bottom-0 left-0 right-0 z-20">
      <div class="backdrop-blur-md bg-black/35 py-6 border-t border-white/20">
        <div class="container mx-auto px-4">
          <div class={`grid grid-cols-2 md:grid-cols-${Math.min(stats.length, 4)} gap-8 text-center`}>
            {stats.map(s => (
              <div>
                <div class="text-3xl font-extrabold text-white">{s.value}</div>
                <div class="mt-2 text-gray-200">{s.label}</div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  )}
</section>

<style>
  section {
    position: relative;
    min-height: 80vh; /* Increased height to accommodate stats at bottom */
  }
</style>